@page "/produkten"

<PageTitle>Murat Blazor Produkten</PageTitle>

Angebote:
<br/>
Produktname: @product.ProductName
<br/>
Preis:       @product.Price

@*Mit value= kann mann Preis hoch oder runter schrauben. Mit @bind-value= wird neuer Wert sofort angezeigt. Mit zweiter @bind-value:event= wird auch eingabe sofort angezeigt.*@
<input type="number" @bind-value="@product.Price" @bind-value:event="oninput" /> €
<br/>

@*Produkt aktivieren und deaktiviert*@
<span>Produkt ist @(product.IsActive?"veröffentlicht!":"nicht veröffentlicht")</span>
<input type="checkbox" @bind-value= "@product.IsActive" checked= "@(product.IsActive?"checked":null)" />
<br/>
Kategorien: 
<select @bind="DefaultSelectValue">
    @foreach (var drop in drops)
    {
        <option value="@drop.Name">@drop.Name</option>
    }
</select>
<br/>
<span>In @DefaultSelectValue veröffentlicht </span>

<EditDeleteButtonComponent></EditDeleteButtonComponent>

@code {
    string DefaultSelectValue = "E-Commerce";

    @*Dropdown Menu erzeugen*@
    List<DropdownProps> drops = new List<DropdownProps>()
    {
        new DropdownProps{Id=1,Name="E-Commerce",Value="30"},
        new DropdownProps{Id=2,Name="Microservice",Value="40"},
        new DropdownProps{Id=3,Name="Social Media",Value="50"},
        new DropdownProps{Id=4,Name="Dependency Injektion",Value="60"}
    };

    @*Produkt Eigenschaften definieren*@
    Products product = new Models.Products()
        {
            Id = 1,
            ProductName = "Produkt 1",
            IsActive = true,
            Price = 20
        };
}
